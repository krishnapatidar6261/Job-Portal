# Generated by Django 4.2.3 on 2024-04-09 08:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Additionally_Filed_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.TextField(choices=[('Seeker', 'Seeker'), ('Company', 'Company')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Seeker_Professional_Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.TextField()),
                ('notice_period', models.TextField(choices=[('Immediate', 'Immediate'), ('Less then 15', 'Less then 15'), ('1 Month', '1 Month'), ('2 Month', '2 Month'), ('More Then 2 Month', 'More Then 2 Month')])),
                ('key_skill', models.TextField()),
                ('project', models.TextField()),
                ('experience_level', models.TextField(choices=[('Fresher', 'Fresher'), ('6 Month', '6 Month'), ('1 Year+', '1 Year+'), ('3 Year+', '3 Year+'), ('More then 5', 'More then 5')])),
                ('cv', models.FileField(upload_to='resums/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seeker_Personal_Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(default='2000-01-01')),
                ('gender', models.TextField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')])),
                ('contact', models.PositiveIntegerField()),
                ('profile_pic', models.ImageField(upload_to='profile images/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Seeker_Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_course_name', models.TextField()),
                ('clg_specialization', models.TextField(default=None)),
                ('clg_name', models.TextField()),
                ('clg_grading_system', models.TextField(choices=[('Percentage', 'Percentage'), ('GPA', 'GPA')])),
                ('clg_grad', models.TextField()),
                ('clg_duration_from', models.DateField(default='2000-01-01')),
                ('clg_duration_to', models.DateField(default='2000-01-01')),
                ('st_10_school_name', models.TextField()),
                ('st_10_grading_system', models.TextField(choices=[('Percentage', 'Percentage'), ('GPA', 'GPA')])),
                ('st_10_grad', models.TextField()),
                ('st_12_school_name', models.TextField()),
                ('st_12_specialization', models.TextField(default=None)),
                ('st_12_grading_system', models.TextField(choices=[('Percentage', 'Percentage'), ('GPA', 'GPA')])),
                ('st_12_grad', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
